apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector-metrics
spec:
  mode: statefulset # Only allowed mode with targetAllocator
  env:
    - name: MY_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
          env:

    # Should be set to 80% of the memory limit. # https://github.com/open-telemetry/opentelemetry-collector/issues/8343
    # - name: GOMEMLIMIT
    #   value: 156MiB

  # https://github.com/open-telemetry/opentelemetry-operator/blob/main/docs/api.md#opentelemetrycollectorspectargetallocator
  # Migration blocked, can not scrape all target because of https://github.com/open-telemetry/opentelemetry-operator/issues/1844
  targetAllocator:
    enabled: true
    serviceAccount: opentelemetry-targetallocator-sa
    prometheusCR:
      enabled: true
      serviceMonitorSelector:
        matchLabels:
          prometheus.io/scrap-with: otel-collector-metrics
      podMonitorSelector:
        matchLabels:
          prometheus.io/scrap-with: otel-collector-metrics
    # resources:
    replicas: 1

  serviceAccount: opentelemetry-collector-sa

  # https://www.otelbin.io/
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            endpoint: ${env:MY_POD_IP}:4318

      # Collect own metrics
      prometheus:
        trim_metric_suffixes: true
        config:
          scrape_configs:
            - job_name: 'otel-collector-traces'
              scrape_interval: 5s
              static_configs:
                - targets: ["${env:MY_POD_IP}:8888"]

    processors:
      batch:

      # memory_limiter:
      #   # drop metrics if memory usage gets too high
      #   check_interval: 1s
      #   limit_percentage: 65
      #   spike_limit_percentage: 20

    exporters:
      debug:

      otlphttp/prometheus:
        endpoint: http://kube-prometheus-stack-prometheus.observability:9090/api/v1/otlp
        tls:
          insecure: true

      prometheusremotewrite:
        endpoint: http://kube-prometheus-stack-prometheus.observability:9090/api/v1/write
        tls:
          insecure: true

    extensions:
      health_check:
      pprof:
      zpages:

    service:
      telemetry:
        metrics:
          level: detailed
          address: ${env:MY_POD_IP}:8888 # wget -O otel-collector-traces-collector-monitoring:8888/metrics
      extensions: [health_check, pprof, zpages]
      pipelines:
        metrics:
          receivers: [prometheus]
          processors: [batch]
          exporters: [prometheusremotewrite, debug]