apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-collector
spec:
  mode: statefulset # Only allowed mode with targetAllocator

  
  # https://github.com/open-telemetry/opentelemetry-operator/blob/main/docs/api.md#opentelemetrycollectorspectargetallocator
  targetAllocator:
    enabled: true
    serviceAccount: opentelemetry-targetallocator-sa
    prometheusCR:
      enabled: true
      # serviceMonitorSelector:
      #   matchLabels:
      #     release: prometheus
      # podMonitorSelector:
      #   matchLabels:
      #     release: prometheus
    # resources:
    replicas: 1

  serviceAccount: opentelemetry-targetallocator-sa
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
      prometheus:
        config:
          scrape_configs:
          - job_name: 'otel-collector'
            scrape_interval: 10s
            static_configs:
            - targets: [ 'otel-collector-collector-0:8888' ]
        target_allocator:
          endpoint: otel-collector-targetallocator
          interval: 30s
          collector_id: "${POD_NAME}"

    processors:
      batch:

    exporters:
      debug:

      prometheusremotewrite:
        endpoint: kube-prometheus.observability:9411/api/prom/push
        tls:
          insecure: true
      otlp:
        endpoint: tempo.observability:4317
        tls:
          insecure: true
          

    extensions:
      health_check:
      pprof:
      zpages:

    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [debug, otlp]
        metrics:
          receivers: [prometheus]
          processors: [batch]
          exporters: [debug, prometheusremotewrite]