apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: observability-loki
  namespace: argocd

  # Add this finalizer ONLY if you want these to cascade delete (A cascade delete, deletes both the app and its resources, rather than only the app.)
  # finalizers:
  #   - resources-finalizer.argocd.argoproj.io

spec:
  project: default
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
      - PrunePropagationPolicy=foreground

  source:
      chart: loki
      repoURL: "https://grafana.github.io/helm-charts"
      targetRevision: 5.22.0
      helm:

        # https://github.com/grafana/loki/tree/main/production/helm/loki
        valuesObject:
          fullnameOverride: loki

          monitoring:
            # scrape configs to scrape its own logs with the labels expected by the included dashboards.
            selfMonitoring:
              enabled: true
            # dashboards:
            rules:
              namespace: observability
              additionalLabels:
                prometheus.io/scrap-with: kube-prometheus-stack
            
            serviceMonitor:
              namespace: observability
              additionalLabels:
                prometheus.io/scrap-with: kube-prometheus-stack

          # https://grafana.com/docs/loki/latest/setup/install/helm/install-scalable/
          singleBinary:
            replicas: 1
          loki:
            auth_enabled: false
            # It is not possible to run the scalable mode with the filesystem storage.
            commonConfig:
              replication_factor: 1
            storage:
              type: filesystem
          
          # serviceAccount:
          #   annotations:
          #     iam.gke.io/gcp-service-account: tempo-storage@${ARGOCD_ENV_PROJECT}.iam.gserviceaccount.com
    
  destination:
    server: "https://kubernetes.default.svc"
    namespace: observability
